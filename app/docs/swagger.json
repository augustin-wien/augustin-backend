{
    "swagger": "2.0",
    "info": {
        "description": "This swagger describes every endpoint of this project.",
        "title": "Augustin Swagger",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "GNU Affero General Public License",
            "url": "https://www.gnu.org/licenses/agpl-3.0.txt"
        },
        "version": "0.0.1"
    },
    "host": "localhost:3000",
    "basePath": "/api/",
    "paths": {
        "/hello/": {
            "get": {
                "description": "Return HelloWorld as sample API call",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "core"
                ],
                "summary": "Return HelloWorld",
                "responses": {}
            }
        },
        "/payments": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "core"
                ],
                "summary": "Get all payments",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/structs.Payment"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "{\"Payments\":[{\"Sender\": 1, \"Receiver\":1, \"Type\":1,\"Amount\":1.00]}",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "core"
                ],
                "summary": "Create a set of payments",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/structs.PaymentType"
                            }
                        }
                    }
                }
            }
        },
        "/settings/": {
            "get": {
                "description": "Return settings about the web-shop",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "core"
                ],
                "summary": "Return settings",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/structs.Setting"
                            }
                        }
                    }
                }
            }
        },
        "/vendor/": {
            "get": {
                "description": "Return information for the vendor",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "core"
                ],
                "summary": "Return vendor information",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/structs.Vendor"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "pgtype.Float4": {
            "type": "object",
            "properties": {
                "float32": {
                    "type": "number"
                },
                "valid": {
                    "type": "boolean"
                }
            }
        },
        "pgtype.InfinityModifier": {
            "type": "integer",
            "enum": [
                1,
                0,
                -1
            ],
            "x-enum-varnames": [
                "Infinity",
                "Finite",
                "NegativeInfinity"
            ]
        },
        "pgtype.Int4": {
            "type": "object",
            "properties": {
                "int32": {
                    "type": "integer"
                },
                "valid": {
                    "type": "boolean"
                }
            }
        },
        "pgtype.Int8": {
            "type": "object",
            "properties": {
                "int64": {
                    "type": "integer"
                },
                "valid": {
                    "type": "boolean"
                }
            }
        },
        "pgtype.Text": {
            "type": "object",
            "properties": {
                "string": {
                    "type": "string"
                },
                "valid": {
                    "type": "boolean"
                }
            }
        },
        "pgtype.Timestamp": {
            "type": "object",
            "properties": {
                "infinityModifier": {
                    "$ref": "#/definitions/pgtype.InfinityModifier"
                },
                "time": {
                    "description": "Time zone will be ignored when encoding to PostgreSQL.",
                    "type": "string"
                },
                "valid": {
                    "type": "boolean"
                }
            }
        },
        "structs.Payment": {
            "type": "object",
            "properties": {
                "amount": {
                    "$ref": "#/definitions/pgtype.Float4"
                },
                "id": {
                    "$ref": "#/definitions/pgtype.Int8"
                },
                "receiver": {
                    "$ref": "#/definitions/pgtype.Int4"
                },
                "sender": {
                    "$ref": "#/definitions/pgtype.Int4"
                },
                "timestamp": {
                    "$ref": "#/definitions/pgtype.Timestamp"
                },
                "type": {
                    "$ref": "#/definitions/pgtype.Int4"
                }
            }
        },
        "structs.PaymentType": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/definitions/pgtype.Int4"
                },
                "name": {
                    "$ref": "#/definitions/pgtype.Text"
                }
            }
        },
        "structs.Setting": {
            "type": "object",
            "properties": {
                "color": {
                    "type": "string"
                },
                "logo": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                }
            }
        },
        "structs.Vendor": {
            "type": "object",
            "properties": {
                "credit": {
                    "type": "number"
                },
                "id-number": {
                    "type": "string"
                },
                "qrcode": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        }
    },
    "externalDocs": {
        "description": "OpenAPI",
        "url": "https://swagger.io/resources/open-api/"
    }
}